name: Release

on:
  push:
    tags:
      - "*-v*"

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Extract ref
        id: meta
        shell: python
        run: |
          import os
          import re
          # @see: https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
          pattern = r"^(?P<packageName>[0-9a-zA-Z-._]+)-v(?P<currentValue>(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$"
          string = "${{ github.ref_name }}"
          match = re.match(pattern, string)
          if match:
              with open(os.environ["GITHUB_OUTPUT"], "a") as f:
                f.write(f"currentValue={match.group('currentValue')}\n")
                f.write(f"packageName={match.group('packageName')}\n")
          else:
              print(f"error: invalid ref {string}")
              exit(1)

      - name: Build
        run: |
          export GIT_PKG="${{ steps.meta.outputs.packageName }}"
          export GIT_REF="${{ steps.meta.outputs.currentValue }}"
          sh ./build.sh

      - name: Release
        uses: ncipollo/release-action@v1.18.0
        with:
          artifacts: dist/*.zip
